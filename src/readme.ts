
import handlbars from 'handlebars'
import { readFileSync } from "fs"
import { getPsnGameData } from "./psn"
import { getSteamGameData } from "./steam"

handlbars.registerHelper('ifeq', function (this: any, a, b, options) {
  if (a == b) { return options.fn(this); }
  return options.inverse(this);
});

handlbars.registerHelper('ifnoteq', function (this: any, a, b, options) {
  if (a != b) { return options.fn(this); }
  return options.inverse(this);
});

const renderGamesHtml = handlbars.compile(readFileSync('./trophy-html.template.hbs', 'utf-8'), {
  knownHelpers: {
    ifEquals: true
  }
})

async function generateRecentGameHtml () {
  const gameData = await Promise.all([
    getPsnGameData(),
    getSteamGameData()
  ])
  
  const games = gameData[0].concat(gameData[1])
    .sort((a, b) => {
      return new Date(a.lastPlayed) > new Date(b.lastPlayed) ? -1 : 1
    })

  return renderGamesHtml({ games })
}

export default async function generateReadme () {
  const recentGamesHtml = await generateRecentGameHtml()

  return `
  # 🖖 Hi! I'm Evan.

  I work as a Developer Advocate at Red Hat. I live in Los Angeles 🇺🇸, though I was born and raised in Ireland 🇮🇪. 

  ### 🎮 What I'm Playing 

  Here's an autogenerated list of games I've been playing recently, along with the respective percentage of trophies/achievements I've collected in that game.

  ${recentGamesHtml}

  ⏰ Last updated: ${new Date().toISOString()}
  `
}